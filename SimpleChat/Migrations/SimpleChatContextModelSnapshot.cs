// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimpleChat.Models;

#nullable disable

namespace SimpleChat.Migrations
{
    [DbContext(typeof(SimpleChatContext))]
    partial class SimpleChatContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimpleChat.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("UserRecieverId")
                        .HasColumnType("integer");

                    b.Property<int>("UserSenderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserRecieverId");

                    b.HasIndex("UserSenderId");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("SimpleChat.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SimpleChat.Models.Message", b =>
                {
                    b.HasOne("SimpleChat.Models.User", "UserReciever")
                        .WithMany("UserRecieverMessages")
                        .HasForeignKey("UserRecieverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimpleChat.Models.User", "UserSender")
                        .WithMany("UserSenderMessages")
                        .HasForeignKey("UserSenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserReciever");

                    b.Navigation("UserSender");
                });

            modelBuilder.Entity("SimpleChat.Models.User", b =>
                {
                    b.Navigation("UserRecieverMessages");

                    b.Navigation("UserSenderMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
